	// Fisichella player zero page variables
	//
	// fis1 .. fis4 = $36 .. $39
	buggyRec = record
		x 				: byte;
		y 				: byte;
		old_x			: byte;
		old_y			: byte;
		y_off 			: byte;
		wh_y			: byte;
		wh_x			: byte;
		wr_y_off		: byte;
		wl_y_off		: byte;
		old_y_off		: byte;
		old_wh_y		: byte;
		old_wr_y_off	: byte;
		old_wl_y_off	: byte;
		sus_y			: byte;
		sus_wy			: byte;
	end;

	countRec = record
		s 				: byte;
		g				: byte;
		m				: byte;
		b				: byte;
		u				: byte;
		t				: byte;
	end;

	buggy: buggyRec at $3f;
	count: countRec at $4f;

	// Loop and temp variables, 
	// t used inside IRQ, i used outside IRQ
	i: byte at $55;
	t: byte at $56;

	// x direction during jump
	xdir: byte at $57;
	yoff: byte at $58;

	// Game main loop state-machine state
	state: byte at $59;

	// Jump direction
	jdir: byte at $5a;

	// Some misc stuff, probably to be removed later
	grndtile: byte at $5b;
	updowntile: byte at $5c;
	grndheight: byte at $5d;
	uppertile: byte at $5e;
	upperdir: byte at $5f;
	
	// LFSR
	lfsrval: integer at $60;
	lfsrlow: byte at $62;

	// Generic pointers, used for tile drawing
	p1: pointer;
	
	// Drawtree array which handles what to redraw
	drawTree: array[3] of byte at $033c;

	// Suspension "ring buffer"
	suspension: array[3] of byte at $033f;

    score: array[] of byte at $0342;

    // Can be in ROM
    scoreadd: array[] of byte = ($01, $00, $00);

	// Upper platforms
	upper1_cnt: byte at $1ec0;
	upper1_dat: byte at $1ec1;
	upper1_ind: byte at $1ec2;

	// Can be in ROM
    scoretitle: cstring = ("SCORE:");
    buggycount: cstring = ("[[[[[[[[[[");

	// Fisichella player variables in tape buffer.
	// Not reserved (hardcoded in asm), just shown as a reminder
	//
	@userdata $03E0 $03FF "Fisichella buffers"
